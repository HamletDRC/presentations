New Ideas for Old Code
----------------------

Refactoring
-----------
38 - 40 - Maniacal Focus on Dependencies, prefer private static methods
41 - Inversion of control, (return out not pass in), 42 - Snip Dependency Trees with Spring
48 - Undetermined Effects - Use JUnit, BCEL, class analyzer to check special parts of the code
51 - Scratch Refactoring

x. Refactoring Book Club
 * Find Images of the 3 books. 


Testing
-------
49 - I write unit tests so that... 
x. Using Groovy 
    - 9 - easy vs. notational convenience
    - 10 - My story from Pearson
    - 11 - Groovy as a testing DSL
            12 - Default parameters, 14 - Builders
            16 - Groovy Assertions, 18 - Multiline Strings
            20 - partial interfaces, 22 - Private method access
            24 - Mocks, 25 - Flow of Groovy
            26 - Downsides
    - 17 - Cooler tools - Reality is that your problms may not be /fixed/ 

44 - Busy Constructors (are no problem to test)
46 - Subclass and Override
50 - Prefer Functional Tests? 

31 - Testability vs. Readability, 32 - Meaningless Abstractions



Unsolved Mysteries - 54
    - co workers that you can't fire




